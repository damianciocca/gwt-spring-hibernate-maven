Componentes de este proyecto:

---------------------------------------------------------------------
---------------------------------------------------------------------

Maven: para el manejo del ciclo de construcción y despliegue del proyecto. Esta integrado con un plugin llamado CARGO que permite deployar automaticamente el WAR generado en un TOMCAT e inicializar el mismo. El despliegue se llevara a cabo en la fase de INSTALL de maven.

Se utilizo el plugin de CARGO para el deployment sobre el tomcat de forma automática.

---------------------------------------------------------------------
---------------------------------------------------------------------

GWT: Frontend

GWT - Mejores practicas

Ver: http://www.google.com/intl/es-419/events/io/2009/sessions/GoogleWebToolkitBestPractices.html

GWT - MVP & Event Bus (clase HandlerManager)

Ver: https://developers.google.com/web-toolkit/articles/mvp-architecture

Ver: http://gwtquickstart.blogspot.com.ar/2010/03/eventbus-and-mvp.html

Ver: http://code.google.com/intl/es-419/webtoolkit/articles/mvp-architecture.html

Ver codigo ejemplo: http://code.google.com/p/gwt-eb/source/browse/trunk/src/net/phiz/gwteb#gwteb%253Fstate%253Dclosed

GWT - mvp4g (no se va a tener en cuenta)

Ver:http://code.google.com/p/mvp4g/

GWT - Manejo del historial (clase History). Para esto se tendra una clase llamada AppController que sera la que escuchara los eventos del browser (atrás, adelante)

GWT - Manejo del historial con estado de las paginas: (Place & activities) => Esto reemplaza al AppController que escucha los eventos del browser (no lo vamos a tener mas). Ademas la clase HandlerManager es reemplazada por la clase EventBus.

Ver: http://www.bright-creations.com/blog/gwt-2-1-mvp-client-factory-example/

Integrated the new ClientFactory class required to pass the EventBus and PlaceController around. En nuestro caso, casi casi que no la vamos a necesitar ya que las vistas las vamos a pasar por parametro al constructor del Presenter (como lo indica MVP) y el eventBus nos llegara por parametro en el metodo start de cada Presenter/Activity.

ClientFactory can also be used to get references to the views (las vistas la vamos a seguir manteniendo mediante el Display en cada Presenter)

I’ve replaced the HandlerManager with the new EventBus class used in GWT 2.1

I’ve ditched the AppController class for the new GWT 2.1 PlaceController

Presenters are no longer called presenters, instead they use Activities. En nuestro ejemplo, vamos a seguir manteniendo el nombre de Presenter en lugar de Activities, donde cada Presenter extendera de una AbstractActivity

Added the AppActivityMapper and the AppPlaceHistoryMapper classes recommended for GWT 2.1

Created places Ej: ContactPlace which can be used for accessing the url based locations

No longer use events to jump from url to url, now use the PlaceController to go to new Place. Antes utilizamos los eventos para ir de una sitio al otro, ahora solo vamos a invocar a la clase PlaceController. El eventBus lo vamos a dejar solo para registrar los handlers mas orientado al negocio en si.

http://stackoverflow.com/questions/4978134/state-management-in-gwt

http://stackoverflow.com/questions/4401303/preserving-navigation-history-state-in-gwt-with-mvp-pattern

http://stackoverflow.com/questions/5510571/gwt-mvp-with-places-activities-wheres-the-model

Well, there's nothing forcing you to do MVP with GWT 2.1 activities & Places, but it sure settles the basements for MVP: the Activity will be your presenter and the IsWidget you'll give back to the AcceptsOneWidget will be your view.

http://www.bright-creations.com/blog/gwt-2-1-mvp-client-factory-example/

Ejemplo codigo fuente completo (muy util) donde se utliza A&P + MVP + EventBus:

https://bitbucket.org/gardellajuanpablo/gwt-sample/wiki/Home

Problemas con el eventBus en el método start de la actividad:
http://comments.gmane.org/gmane.org.google.gwt/75197
Solucion: http://stackoverflow.com/questions/6367576/problem-with-order-of-event-registeringe-sending-receiving-and-activities-plac

IMPORTATE: Problemas con el manejo del History: Se ha intentando hacer varias pruebas y para algunos casos funciona correctamente (desde un listado ir a un formulario pasando el ID de la entidad via URL con los places) pero para otros casos no se ha podido encontrale la vuelta (cuando vuelvo al listado, lo ideal seria que me mantegna seleccionado los items del listado como asi tmb los filtros y eso se complica ya que la URL del listado no incluye de entrada las cosas que vos a seleccionar)

Es decir, cuando ingreso al listado la URL es:

http://127.0.0.1:8888/MyGwtMavenSampleApp.html?gwt.codesvr=127.0.0.1:9997#RoleListPlace:

y cuando vamos a la edicion del registro, vemos esta URL:

http://127.0.0.1:8888/MyGwtMavenSampleApp.html?gwt.codesvr=127.0.0.1:9997#RoleFormPlace:51

Con esto permite que haciendo back and forward con el browser nos mantenga los valores de los formularios, pero no así del listado (el o los items seleccionados) Es aqui donde encontramos un problema y por ahora no le dimos una solucion!!


GWT - TableModel (modelos para las grillas, permitiendo obtener objetos tipados en lugar de Strings)

GWT - SimplListModel (modelo para los combos, permitiendo obtener objetos tipados en lugar de Strings)

GWT - ListComboBox + SimplListModel + EntityToStringFormatter (para el manjeo de combos).

GWT - Gwt-Dispatch (no se va a tener en cuenta)

http://code.google.com/p/gwt-dispatch/wiki/GettingStarted
http://code.google.com/p/gwt-dispatch/wiki/ServerConfigurationWithSpring
https://github.com/rombert/gwt-dispatch-sample
http://architects.dzone.com/articles/gwt-architecture-best

NOTA: Al final no me convence demasiado ya que no solo que vamos a tener muchas clases para el action (command) y el result sino que tambien no queda claro como manejar la transaccionabilidad, es decir, si en el handler vamos a tener q inyectar el service de spring. Porque la idea es poder utilizar los @Service de Spring.

Vi un ejemplo donde a los Handlers para un action y un result lo transforman a un BEAN de Spring para poder inyectarle el servicio y el handler queda como un pasamano a un service. Me parece mucho codigo para una simple llamada a un servicio. Mucho pasamano.

Ver: https://bitbucket.org/gardellajuanpablo/gwt-sample/wiki/Home 

GWT - FlexTable con paginacion:

Para el tema de la paginacion encontramos que a partir de la version 2.1 de GWT, encontramos con un nuevo widget llamado CellTable: "CellTable is one of the new widgets that supports pagination. Therefore, there no need to use PagingScrollTable in the gwt incubator or implementations in other third-party libraries".

http://www.mytechtip.com/2010/11/gwt-celltable-example-using_8168.html

http://gwt.google.com/samples/Showcase/Showcase.html#!CwCellTable

http://learneverywhere.wordpress.com/java/gwt/pagination-in-gwt-cell-table/

http://google-web-toolkit.googlecode.com/svn/javadoc/2.1/com/google/gwt/user/cellview/client/CellTable.html

http://java-all-frameworks.blogspot.com.ar/2011/08/gwt-panels-widgets.html
GWT - Usuario logueado en el HTML via SpringSecurity

GWT - HTML (HOME con el header, el footer, el logout, etc)

GWT - Popup generico que se lanze para los errores

GWT - Link de logout con SpringSecurity

GWT - Bloqueo de los botones luego de hacer un clic, para evitar que vaya N veces a la BD. Y volverlo a habilitar cuando el server de una respuesta.

GWT & Spring security - que sucede si al hacer para atras o adelante desde el browser y la session expiro ?
http://stackoverflow.com/questions/8957131/keeping-gwt-history-hashes-thru-spring-security-login

GWT - Extender el AsyncCallback y armar uno generico con los mensajes de error correspondientes

---------------------------------------------------------------------
---------------------------------------------------------------------

Spring Security: Para le manejo de la autenticacion y autorizacion.

Ver: http://www.javacodegeeks.com/2010/12/securing-gwt-apps-with-spring-security.html

Ver: http://www.adictosaltrabajo.com/tutoriales/tutoriales.php?pagina=utilizaciondegruposenspringsecurity

Ver: http://code.google.com/p/google-web-toolkit-incubator/wiki/LoginSecurityFAQ

Ver: http://groups.google.com/group/google-web-toolkit/browse_thread/thread/c6dfd91b52eea79a/05ef63f01d7b2b8f?lnk=gst&q=session#05ef

Ver: http://groups.google.com/group/google-web-toolkit/browse_thread/thread/c5ede413a44b3737/b1ee110ccc3b9b1e?lnk=dice

Manejar la seguridad a nivel de permisos en la aplicación y no a nivel de roles. Una buena practica es no harcodear los roles en la aplicación para que estos se puedan dar de alta dinamicamente. 

---------------------------------------------------------------------
---------------------------------------------------------------------

JasperReport & iReport

---------------------------------------------------------------------
---------------------------------------------------------------------

Spring: Middleware


---------------------------------------------------------------------
---------------------------------------------------------------------


JPA/Hibernate: Persistencia


Manejo de CAPTCHA: http://www.javacodegeeks.com/2010/06/add-captcha-gwt-application.html

Transacciones

Manejo de excepciones

Paginacion

JTA/Datasource

Cache de 2do nivel de hibernate

Dependency Injection

Place Service
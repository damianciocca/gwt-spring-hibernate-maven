Componentes de este proyecto:

---------------------------------------------------------------------
---------------------------------------------------------------------

Maven: para el manejo del ciclo de construcción y despliegue del proyecto. Esta integrado con un plugin llamado CARGO que permite deployar automaticamente el WAR generado en un TOMCAT e inicializar el mismo. El despliegue se llevara a cabo en la fase de INSTALL de maven.

Se utilizo el plugin de CARGO para el deployment sobre el tomcat de forma automática.

---------------------------------------------------------------------
---------------------------------------------------------------------

GWT: Frontend

GWT - Mejores practicas

Ver: http://www.google.com/intl/es-419/events/io/2009/sessions/GoogleWebToolkitBestPractices.html

GWT - MVP & Event Bus (clase HandlerManager)

Ver: https://developers.google.com/web-toolkit/articles/mvp-architecture

Ver: http://gwtquickstart.blogspot.com.ar/2010/03/eventbus-and-mvp.html

Ver: http://code.google.com/intl/es-419/webtoolkit/articles/mvp-architecture.html

Ver codigo ejemplo: http://code.google.com/p/gwt-eb/source/browse/trunk/src/net/phiz/gwteb#gwteb%253Fstate%253Dclosed

GWT - mvp4g (no se va a tener en cuenta)

Ver:http://code.google.com/p/mvp4g/

GWT - Manejo del historial (clase History). Para esto se tendra una clase llamada AppController que sera la que escuchara los eventos del browser (atrás, adelante)

GWT - Manejo del estado de las paginas: (Place & activities)
http://stackoverflow.com/questions/4978134/state-management-in-gwt
http://stackoverflow.com/questions/4401303/preserving-navigation-history-state-in-gwt-with-mvp-pattern

Importante:
http://stackoverflow.com/questions/5510571/gwt-mvp-with-places-activities-wheres-the-model
http://www.bright-creations.com/blog/gwt-2-1-mvp-client-factory-example/


GWT - TableModel (modelos para las grillas, permitiendo obtener objetos tipados en lugar de Strings)

GWT - SimplListModel (modelo para los combos, permitiendo obtener objetos tipados en lugar de Strings)

GWT - Gwt-Dispatch (no se va a tener en cuenta)

http://code.google.com/p/gwt-dispatch/wiki/GettingStarted
http://code.google.com/p/gwt-dispatch/wiki/ServerConfigurationWithSpring
https://github.com/rombert/gwt-dispatch-sample
http://architects.dzone.com/articles/gwt-architecture-best

NOTA: Al final no me convence demasiado ya que no solo que vamos a tener muchas clases para el action (command) y el result sino que tambien no queda claro como manejar la transaccionabilidad, es decir, si en el handler vamos a tener q inyectar el service de spring. Porque la idea es poder utilizar los @Service de Spring.

GWT - FlexTable con paginacion

GWT - Usuario logueado en el HTML via SpringSecurity

GWT - HTML (HOME con el header, el footer, el logout, etc)

GWT - Popup generico que se lanze para los errores

GWT - Link de logout con SpringSecurity

GWT - Bloqueo de los botones luego de hacer un clic, para evitar que vaya N veces a la BD. Y volverlo a habilitar cuando el server de una respuesta.

GWT & Spring security - que sucede si al hacer para atras o adelante desde el browser y la session expiro ?
http://stackoverflow.com/questions/8957131/keeping-gwt-history-hashes-thru-spring-security-login

GWT - Extender el AsyncCallback y armar uno generico con los mensajes de error correspondientes

---------------------------------------------------------------------
---------------------------------------------------------------------

Spring Security: Para le manejo de la autenticacion y autorizacion.

Ver: http://www.javacodegeeks.com/2010/12/securing-gwt-apps-with-spring-security.html

Ver: http://www.adictosaltrabajo.com/tutoriales/tutoriales.php?pagina=utilizaciondegruposenspringsecurity

Ver: http://code.google.com/p/google-web-toolkit-incubator/wiki/LoginSecurityFAQ

Ver: http://groups.google.com/group/google-web-toolkit/browse_thread/thread/c6dfd91b52eea79a/05ef63f01d7b2b8f?lnk=gst&q=session#05ef

Ver: http://groups.google.com/group/google-web-toolkit/browse_thread/thread/c5ede413a44b3737/b1ee110ccc3b9b1e?lnk=dice

Manejar la seguridad a nivel de permisos en la aplicación y no a nivel de roles. Una buena practica es no harcodear los roles en la aplicación para que estos se puedan dar de alta dinamicamente. 

---------------------------------------------------------------------
---------------------------------------------------------------------

JasperReport & iReport

---------------------------------------------------------------------
---------------------------------------------------------------------

Spring: Middleware


---------------------------------------------------------------------
---------------------------------------------------------------------


JPA/Hibernate: Persistencia


Manejo de CAPTCHA: http://www.javacodegeeks.com/2010/06/add-captcha-gwt-application.html

Transacciones

Manejo de excepciones

Paginacion

JTA/Datasource

Cache de 2do nivel de hibernate

Dependency Injection

Place Service